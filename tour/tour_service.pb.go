// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: tour_service.proto

package tour

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tour_Status int32

const (
	Tour_Draft     Tour_Status = 0
	Tour_Published Tour_Status = 1
	Tour_Archived  Tour_Status = 2
)

// Enum value maps for Tour_Status.
var (
	Tour_Status_name = map[int32]string{
		0: "Draft",
		1: "Published",
		2: "Archived",
	}
	Tour_Status_value = map[string]int32{
		"Draft":     0,
		"Published": 1,
		"Archived":  2,
	}
)

func (x Tour_Status) Enum() *Tour_Status {
	p := new(Tour_Status)
	*p = x
	return p
}

func (x Tour_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tour_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_tour_service_proto_enumTypes[0].Descriptor()
}

func (Tour_Status) Type() protoreflect.EnumType {
	return &file_tour_service_proto_enumTypes[0]
}

func (x Tour_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tour_Status.Descriptor instead.
func (Tour_Status) EnumDescriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{24, 0}
}

type GetAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllRequest) Reset() {
	*x = GetAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRequest) ProtoMessage() {}

func (x *GetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRequest.ProtoReflect.Descriptor instead.
func (*GetAllRequest) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{0}
}

type GetToursResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tours []*Tour `protobuf:"bytes,1,rep,name=tours,proto3" json:"tours,omitempty"`
}

func (x *GetToursResponse) Reset() {
	*x = GetToursResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToursResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToursResponse) ProtoMessage() {}

func (x *GetToursResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToursResponse.ProtoReflect.Descriptor instead.
func (*GetToursResponse) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetToursResponse) GetTours() []*Tour {
	if x != nil {
		return x.Tours
	}
	return nil
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TourResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tour *Tour `protobuf:"bytes,1,opt,name=tour,proto3" json:"tour,omitempty"`
}

func (x *TourResponse) Reset() {
	*x = TourResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourResponse) ProtoMessage() {}

func (x *TourResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourResponse.ProtoReflect.Descriptor instead.
func (*TourResponse) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{3}
}

func (x *TourResponse) GetTour() *Tour {
	if x != nil {
		return x.Tour
	}
	return nil
}

type TourEmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TourEmptyResponse) Reset() {
	*x = TourEmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourEmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourEmptyResponse) ProtoMessage() {}

func (x *TourEmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourEmptyResponse.ProtoReflect.Descriptor instead.
func (*TourEmptyResponse) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{4}
}

type CreateTourRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tour *Tour `protobuf:"bytes,1,opt,name=tour,proto3" json:"tour,omitempty"`
}

func (x *CreateTourRequest) Reset() {
	*x = CreateTourRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTourRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTourRequest) ProtoMessage() {}

func (x *CreateTourRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTourRequest.ProtoReflect.Descriptor instead.
func (*CreateTourRequest) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTourRequest) GetTour() *Tour {
	if x != nil {
		return x.Tour
	}
	return nil
}

type UpdateTourRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tour *Tour  `protobuf:"bytes,2,opt,name=tour,proto3" json:"tour,omitempty"`
}

func (x *UpdateTourRequest) Reset() {
	*x = UpdateTourRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTourRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTourRequest) ProtoMessage() {}

func (x *UpdateTourRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTourRequest.ProtoReflect.Descriptor instead.
func (*UpdateTourRequest) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTourRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTourRequest) GetTour() *Tour {
	if x != nil {
		return x.Tour
	}
	return nil
}

type CheckpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkpoint *Checkpoint `protobuf:"bytes,1,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
}

func (x *CheckpointResponse) Reset() {
	*x = CheckpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointResponse) ProtoMessage() {}

func (x *CheckpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointResponse.ProtoReflect.Descriptor instead.
func (*CheckpointResponse) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{7}
}

func (x *CheckpointResponse) GetCheckpoint() *Checkpoint {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

type GetCheckpointsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkpoints []*Checkpoint `protobuf:"bytes,1,rep,name=checkpoints,proto3" json:"checkpoints,omitempty"`
}

func (x *GetCheckpointsResponse) Reset() {
	*x = GetCheckpointsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckpointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckpointsResponse) ProtoMessage() {}

func (x *GetCheckpointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckpointsResponse.ProtoReflect.Descriptor instead.
func (*GetCheckpointsResponse) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetCheckpointsResponse) GetCheckpoints() []*Checkpoint {
	if x != nil {
		return x.Checkpoints
	}
	return nil
}

type CreateCheckpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkpoint *Checkpoint `protobuf:"bytes,1,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
}

func (x *CreateCheckpointRequest) Reset() {
	*x = CreateCheckpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCheckpointRequest) ProtoMessage() {}

func (x *CreateCheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCheckpointRequest.ProtoReflect.Descriptor instead.
func (*CreateCheckpointRequest) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{9}
}

func (x *CreateCheckpointRequest) GetCheckpoint() *Checkpoint {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

type UpdateCheckpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Checkpoint *Checkpoint `protobuf:"bytes,2,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
}

func (x *UpdateCheckpointRequest) Reset() {
	*x = UpdateCheckpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckpointRequest) ProtoMessage() {}

func (x *UpdateCheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckpointRequest.ProtoReflect.Descriptor instead.
func (*UpdateCheckpointRequest) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateCheckpointRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCheckpointRequest) GetCheckpoint() *Checkpoint {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

type EquipmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Equipment *Equipment `protobuf:"bytes,1,opt,name=equipment,proto3" json:"equipment,omitempty"`
}

func (x *EquipmentResponse) Reset() {
	*x = EquipmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentResponse) ProtoMessage() {}

func (x *EquipmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentResponse.ProtoReflect.Descriptor instead.
func (*EquipmentResponse) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{11}
}

func (x *EquipmentResponse) GetEquipment() *Equipment {
	if x != nil {
		return x.Equipment
	}
	return nil
}

type GetEquipmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Equipments []*Equipment `protobuf:"bytes,1,rep,name=equipments,proto3" json:"equipments,omitempty"`
}

func (x *GetEquipmentsResponse) Reset() {
	*x = GetEquipmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEquipmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEquipmentsResponse) ProtoMessage() {}

func (x *GetEquipmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEquipmentsResponse.ProtoReflect.Descriptor instead.
func (*GetEquipmentsResponse) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetEquipmentsResponse) GetEquipments() []*Equipment {
	if x != nil {
		return x.Equipments
	}
	return nil
}

type CreateEquipmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Equipment *Equipment `protobuf:"bytes,1,opt,name=equipment,proto3" json:"equipment,omitempty"`
}

func (x *CreateEquipmentRequest) Reset() {
	*x = CreateEquipmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEquipmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEquipmentRequest) ProtoMessage() {}

func (x *CreateEquipmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEquipmentRequest.ProtoReflect.Descriptor instead.
func (*CreateEquipmentRequest) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{13}
}

func (x *CreateEquipmentRequest) GetEquipment() *Equipment {
	if x != nil {
		return x.Equipment
	}
	return nil
}

type UpdateEquipmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Equipment *Equipment `protobuf:"bytes,2,opt,name=equipment,proto3" json:"equipment,omitempty"`
}

func (x *UpdateEquipmentRequest) Reset() {
	*x = UpdateEquipmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEquipmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEquipmentRequest) ProtoMessage() {}

func (x *UpdateEquipmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEquipmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateEquipmentRequest) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateEquipmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEquipmentRequest) GetEquipment() *Equipment {
	if x != nil {
		return x.Equipment
	}
	return nil
}

type TourReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourReview *TourReview `protobuf:"bytes,1,opt,name=tourReview,proto3" json:"tourReview,omitempty"`
}

func (x *TourReviewResponse) Reset() {
	*x = TourReviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourReviewResponse) ProtoMessage() {}

func (x *TourReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourReviewResponse.ProtoReflect.Descriptor instead.
func (*TourReviewResponse) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{15}
}

func (x *TourReviewResponse) GetTourReview() *TourReview {
	if x != nil {
		return x.TourReview
	}
	return nil
}

type GetTourReviewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourReviews []*TourReview `protobuf:"bytes,1,rep,name=tourReviews,proto3" json:"tourReviews,omitempty"`
}

func (x *GetTourReviewsResponse) Reset() {
	*x = GetTourReviewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTourReviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTourReviewsResponse) ProtoMessage() {}

func (x *GetTourReviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTourReviewsResponse.ProtoReflect.Descriptor instead.
func (*GetTourReviewsResponse) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetTourReviewsResponse) GetTourReviews() []*TourReview {
	if x != nil {
		return x.TourReviews
	}
	return nil
}

type CreateTourReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourReview *TourReview `protobuf:"bytes,1,opt,name=tourReview,proto3" json:"tourReview,omitempty"`
}

func (x *CreateTourReviewRequest) Reset() {
	*x = CreateTourReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTourReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTourReviewRequest) ProtoMessage() {}

func (x *CreateTourReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTourReviewRequest.ProtoReflect.Descriptor instead.
func (*CreateTourReviewRequest) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{17}
}

func (x *CreateTourReviewRequest) GetTourReview() *TourReview {
	if x != nil {
		return x.TourReview
	}
	return nil
}

type UpdateTourReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TourReview *TourReview `protobuf:"bytes,2,opt,name=tourReview,proto3" json:"tourReview,omitempty"`
}

func (x *UpdateTourReviewRequest) Reset() {
	*x = UpdateTourReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTourReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTourReviewRequest) ProtoMessage() {}

func (x *UpdateTourReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTourReviewRequest.ProtoReflect.Descriptor instead.
func (*UpdateTourReviewRequest) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateTourReviewRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTourReviewRequest) GetTourReview() *TourReview {
	if x != nil {
		return x.TourReview
	}
	return nil
}

type GetAverageGradeForTourRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AverageGrade float32 `protobuf:"fixed32,1,opt,name=averageGrade,proto3" json:"averageGrade,omitempty"`
}

func (x *GetAverageGradeForTourRequest) Reset() {
	*x = GetAverageGradeForTourRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAverageGradeForTourRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAverageGradeForTourRequest) ProtoMessage() {}

func (x *GetAverageGradeForTourRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAverageGradeForTourRequest.ProtoReflect.Descriptor instead.
func (*GetAverageGradeForTourRequest) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetAverageGradeForTourRequest) GetAverageGrade() float32 {
	if x != nil {
		return x.AverageGrade
	}
	return 0
}

type TourProblemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourProblem *TourProblem `protobuf:"bytes,1,opt,name=tourProblem,proto3" json:"tourProblem,omitempty"`
}

func (x *TourProblemResponse) Reset() {
	*x = TourProblemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourProblemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourProblemResponse) ProtoMessage() {}

func (x *TourProblemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourProblemResponse.ProtoReflect.Descriptor instead.
func (*TourProblemResponse) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{20}
}

func (x *TourProblemResponse) GetTourProblem() *TourProblem {
	if x != nil {
		return x.TourProblem
	}
	return nil
}

type GetTourProblemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourProblems []*TourProblem `protobuf:"bytes,1,rep,name=tourProblems,proto3" json:"tourProblems,omitempty"`
}

func (x *GetTourProblemsResponse) Reset() {
	*x = GetTourProblemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTourProblemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTourProblemsResponse) ProtoMessage() {}

func (x *GetTourProblemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTourProblemsResponse.ProtoReflect.Descriptor instead.
func (*GetTourProblemsResponse) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetTourProblemsResponse) GetTourProblems() []*TourProblem {
	if x != nil {
		return x.TourProblems
	}
	return nil
}

type CreateTourProblemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourProblem *TourProblem `protobuf:"bytes,1,opt,name=tourProblem,proto3" json:"tourProblem,omitempty"`
}

func (x *CreateTourProblemRequest) Reset() {
	*x = CreateTourProblemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTourProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTourProblemRequest) ProtoMessage() {}

func (x *CreateTourProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTourProblemRequest.ProtoReflect.Descriptor instead.
func (*CreateTourProblemRequest) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{22}
}

func (x *CreateTourProblemRequest) GetTourProblem() *TourProblem {
	if x != nil {
		return x.TourProblem
	}
	return nil
}

type UpdateTourProblemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TourProblem *TourProblem `protobuf:"bytes,2,opt,name=tourProblem,proto3" json:"tourProblem,omitempty"`
}

func (x *UpdateTourProblemRequest) Reset() {
	*x = UpdateTourProblemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTourProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTourProblemRequest) ProtoMessage() {}

func (x *UpdateTourProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTourProblemRequest.ProtoReflect.Descriptor instead.
func (*UpdateTourProblemRequest) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateTourProblemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTourProblemRequest) GetTourProblem() *TourProblem {
	if x != nil {
		return x.TourProblem
	}
	return nil
}

type Tour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId    uint32      `protobuf:"varint,2,opt,name=authorId,proto3" json:"authorId,omitempty"`
	Name        string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string      `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	PublishTime string      `protobuf:"bytes,5,opt,name=publishTime,proto3" json:"publishTime,omitempty"`
	Status      Tour_Status `protobuf:"varint,6,opt,name=status,proto3,enum=Tour_Status" json:"status,omitempty"`
	Image       string      `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty"`
	Difficulty  uint32      `protobuf:"varint,8,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Price       float32     `protobuf:"fixed32,9,opt,name=price,proto3" json:"price,omitempty"`
	FootTime    float32     `protobuf:"fixed32,10,opt,name=footTime,proto3" json:"footTime,omitempty"`
	BicycleTime float32     `protobuf:"fixed32,11,opt,name=bicycleTime,proto3" json:"bicycleTime,omitempty"`
	CarTime     float32     `protobuf:"fixed32,12,opt,name=carTime,proto3" json:"carTime,omitempty"`
	TotalLength float32     `protobuf:"fixed32,13,opt,name=totalLength,proto3" json:"totalLength,omitempty"`
}

func (x *Tour) Reset() {
	*x = Tour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tour) ProtoMessage() {}

func (x *Tour) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tour.ProtoReflect.Descriptor instead.
func (*Tour) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{24}
}

func (x *Tour) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Tour) GetAuthorId() uint32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Tour) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tour) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tour) GetPublishTime() string {
	if x != nil {
		return x.PublishTime
	}
	return ""
}

func (x *Tour) GetStatus() Tour_Status {
	if x != nil {
		return x.Status
	}
	return Tour_Draft
}

func (x *Tour) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Tour) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *Tour) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Tour) GetFootTime() float32 {
	if x != nil {
		return x.FootTime
	}
	return 0
}

func (x *Tour) GetBicycleTime() float32 {
	if x != nil {
		return x.BicycleTime
	}
	return 0
}

func (x *Tour) GetCarTime() float32 {
	if x != nil {
		return x.CarTime
	}
	return 0
}

func (x *Tour) GetTotalLength() float32 {
	if x != nil {
		return x.TotalLength
	}
	return 0
}

type Checkpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TourId      string  `protobuf:"bytes,2,opt,name=tourId,proto3" json:"tourId,omitempty"`
	Latitude    float32 `protobuf:"fixed32,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude   float32 `protobuf:"fixed32,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Name        string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Image       string  `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty"`
	IsPublic    bool    `protobuf:"varint,8,opt,name=isPublic,proto3" json:"isPublic,omitempty"`
}

func (x *Checkpoint) Reset() {
	*x = Checkpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Checkpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checkpoint) ProtoMessage() {}

func (x *Checkpoint) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checkpoint.ProtoReflect.Descriptor instead.
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{25}
}

func (x *Checkpoint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Checkpoint) GetTourId() string {
	if x != nil {
		return x.TourId
	}
	return ""
}

func (x *Checkpoint) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Checkpoint) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Checkpoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Checkpoint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Checkpoint) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Checkpoint) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type Equipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Equipment) Reset() {
	*x = Equipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Equipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Equipment) ProtoMessage() {}

func (x *Equipment) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Equipment.ProtoReflect.Descriptor instead.
func (*Equipment) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{26}
}

func (x *Equipment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Equipment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Equipment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TourReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Grade      uint32                 `protobuf:"varint,2,opt,name=grade,proto3" json:"grade,omitempty"`
	Comment    string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	UserId     uint32                 `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
	VisitDate  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=visitDate,proto3" json:"visitDate,omitempty"`
	ReviewDate *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=reviewDate,proto3" json:"reviewDate,omitempty"`
	Images     string                 `protobuf:"bytes,7,opt,name=images,proto3" json:"images,omitempty"`
	TourId     string                 `protobuf:"bytes,8,opt,name=tourId,proto3" json:"tourId,omitempty"`
}

func (x *TourReview) Reset() {
	*x = TourReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourReview) ProtoMessage() {}

func (x *TourReview) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourReview.ProtoReflect.Descriptor instead.
func (*TourReview) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{27}
}

func (x *TourReview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TourReview) GetGrade() uint32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *TourReview) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TourReview) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TourReview) GetVisitDate() *timestamppb.Timestamp {
	if x != nil {
		return x.VisitDate
	}
	return nil
}

func (x *TourReview) GetReviewDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReviewDate
	}
	return nil
}

func (x *TourReview) GetImages() string {
	if x != nil {
		return x.Images
	}
	return ""
}

func (x *TourReview) GetTourId() string {
	if x != nil {
		return x.TourId
	}
	return ""
}

type TourProblem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProblemCategory   string                 `protobuf:"bytes,2,opt,name=problemCategory,proto3" json:"problemCategory,omitempty"`
	ProblemPriority   string                 `protobuf:"bytes,3,opt,name=problemPriority,proto3" json:"problemPriority,omitempty"`
	TimeStamp         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	Description       string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	TourId            string                 `protobuf:"bytes,6,opt,name=tourId,proto3" json:"tourId,omitempty"`
	IsClosed          bool                   `protobuf:"varint,7,opt,name=isClosed,proto3" json:"isClosed,omitempty"`
	IsResolved        bool                   `protobuf:"varint,8,opt,name=isResolved,proto3" json:"isResolved,omitempty"`
	TouristId         uint32                 `protobuf:"varint,9,opt,name=touristId,proto3" json:"touristId,omitempty"`
	DeadlineTimeStamp *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=deadlineTimeStamp,proto3" json:"deadlineTimeStamp,omitempty"`
}

func (x *TourProblem) Reset() {
	*x = TourProblem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tour_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourProblem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourProblem) ProtoMessage() {}

func (x *TourProblem) ProtoReflect() protoreflect.Message {
	mi := &file_tour_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourProblem.ProtoReflect.Descriptor instead.
func (*TourProblem) Descriptor() ([]byte, []int) {
	return file_tour_service_proto_rawDescGZIP(), []int{28}
}

func (x *TourProblem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TourProblem) GetProblemCategory() string {
	if x != nil {
		return x.ProblemCategory
	}
	return ""
}

func (x *TourProblem) GetProblemPriority() string {
	if x != nil {
		return x.ProblemPriority
	}
	return ""
}

func (x *TourProblem) GetTimeStamp() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeStamp
	}
	return nil
}

func (x *TourProblem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TourProblem) GetTourId() string {
	if x != nil {
		return x.TourId
	}
	return ""
}

func (x *TourProblem) GetIsClosed() bool {
	if x != nil {
		return x.IsClosed
	}
	return false
}

func (x *TourProblem) GetIsResolved() bool {
	if x != nil {
		return x.IsResolved
	}
	return false
}

func (x *TourProblem) GetTouristId() uint32 {
	if x != nil {
		return x.TouristId
	}
	return 0
}

func (x *TourProblem) GetDeadlineTimeStamp() *timestamppb.Timestamp {
	if x != nil {
		return x.DeadlineTimeStamp
	}
	return nil
}

var File_tour_service_proto protoreflect.FileDescriptor

var file_tour_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x74, 0x6f, 0x75, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x05,
	0x74, 0x6f, 0x75, 0x72, 0x73, 0x22, 0x1c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0c, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x74, 0x6f, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x04, 0x74, 0x6f, 0x75, 0x72, 0x22, 0x13,
	0x0a, 0x11, 0x54, 0x6f, 0x75, 0x72, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2e, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x74, 0x6f, 0x75, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x04, 0x74,
	0x6f, 0x75, 0x72, 0x22, 0x3e, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x74, 0x6f, 0x75, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x04, 0x74,
	0x6f, 0x75, 0x72, 0x22, 0x41, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22,
	0x46, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2b, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22,
	0x3d, 0x0a, 0x11, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x43,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x28, 0x0a, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x12, 0x54,
	0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x47,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x74, 0x6f, 0x75, 0x72,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x0b, 0x74, 0x6f, 0x75, 0x72,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x22, 0x46, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22,
	0x56, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x0a, 0x74, 0x6f,
	0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x0a, 0x74, 0x6f, 0x75,
	0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x43, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x75,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x22, 0x45, 0x0a, 0x13,
	0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x74, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x0b, 0x74, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x22, 0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x52, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x22, 0x4a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0b,
	0x74, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52,
	0x0b, 0x74, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x22, 0x5a, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x0b, 0x74, 0x6f, 0x75, 0x72,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x0b, 0x74, 0x6f, 0x75,
	0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x22, 0xa8, 0x03, 0x0a, 0x04, 0x54, 0x6f, 0x75,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6f, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x66, 0x6f, 0x6f, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x69, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x62, 0x69, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x63, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x22, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x10, 0x02, 0x22, 0xd6, 0x01, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x51, 0x0a, 0x09,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x8a, 0x02, 0x0a, 0x0a, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x76, 0x69, 0x73, 0x69, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x76, 0x69, 0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x3a, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x22, 0x89, 0x03, 0x0a,
	0x0b, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f,
	0x75, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x48,
	0x0a, 0x11, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x32, 0x83, 0x11, 0x0a, 0x0b, 0x54, 0x6f, 0x75,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x75, 0x72, 0x12, 0x0b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0d, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x3f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x75,
	0x72, 0x73, 0x12, 0x0e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x07, 0x12, 0x05, 0x2f,
	0x74, 0x6f, 0x75, 0x72, 0x12, 0x3f, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x6f, 0x75, 0x72,
	0x12, 0x12, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x3a, 0x01, 0x2a, 0x22, 0x05,
	0x2f, 0x74, 0x6f, 0x75, 0x72, 0x12, 0x43, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x75, 0x72, 0x12, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x32, 0x0a,
	0x2f, 0x74, 0x6f, 0x75, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x3c, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x0b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x2a, 0x0a, 0x2f, 0x74,
	0x6f, 0x75, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x57, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x75, 0x72, 0x73, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x0b, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x42, 0x79, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x2f, 0x7b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64,
	0x7d, 0x12, 0x4b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x0b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x57,
	0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x18, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a, 0x22, 0x0b, 0x2f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x32, 0x10, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x4e, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x2a, 0x10, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x60, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x0b,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x79, 0x54, 0x6f, 0x75, 0x72, 0x49,
	0x44, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x48, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12,
	0x0f, 0x2f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x53, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x17, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x32, 0x0f, 0x2f,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x4b,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x0b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x2a, 0x0f, 0x2f, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x57, 0x0a, 0x0e, 0x50,
	0x6f, 0x73, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a, 0x22, 0x0b, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x5b, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x32,
	0x10, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x4e, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x2a,
	0x10, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x51, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x75, 0x72, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x0e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x58, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x75, 0x72, 0x49, 0x44, 0x12, 0x0b,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x74,
	0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6d,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x0b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f,
	0x74, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x61, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x2d, 0x67, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x4e, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12,
	0x0b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x54,
	0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x74, 0x6f, 0x75,
	0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5b, 0x0a,
	0x0f, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x12, 0x19, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x54, 0x6f,
	0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x74,
	0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x5f, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12,
	0x19, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x54, 0x6f, 0x75,
	0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x32, 0x11, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x51, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x12, 0x0b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x74, 0x6f,
	0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5e,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x73, 0x46, 0x6f, 0x72, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x12, 0x0b, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x75, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x74, 0x6f, 0x75,
	0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x0c,
	0x5a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tour_service_proto_rawDescOnce sync.Once
	file_tour_service_proto_rawDescData = file_tour_service_proto_rawDesc
)

func file_tour_service_proto_rawDescGZIP() []byte {
	file_tour_service_proto_rawDescOnce.Do(func() {
		file_tour_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tour_service_proto_rawDescData)
	})
	return file_tour_service_proto_rawDescData
}

var file_tour_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tour_service_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_tour_service_proto_goTypes = []interface{}{
	(Tour_Status)(0),                      // 0: Tour.Status
	(*GetAllRequest)(nil),                 // 1: GetAllRequest
	(*GetToursResponse)(nil),              // 2: GetToursResponse
	(*GetRequest)(nil),                    // 3: GetRequest
	(*TourResponse)(nil),                  // 4: TourResponse
	(*TourEmptyResponse)(nil),             // 5: TourEmptyResponse
	(*CreateTourRequest)(nil),             // 6: CreateTourRequest
	(*UpdateTourRequest)(nil),             // 7: UpdateTourRequest
	(*CheckpointResponse)(nil),            // 8: CheckpointResponse
	(*GetCheckpointsResponse)(nil),        // 9: GetCheckpointsResponse
	(*CreateCheckpointRequest)(nil),       // 10: CreateCheckpointRequest
	(*UpdateCheckpointRequest)(nil),       // 11: UpdateCheckpointRequest
	(*EquipmentResponse)(nil),             // 12: EquipmentResponse
	(*GetEquipmentsResponse)(nil),         // 13: GetEquipmentsResponse
	(*CreateEquipmentRequest)(nil),        // 14: CreateEquipmentRequest
	(*UpdateEquipmentRequest)(nil),        // 15: UpdateEquipmentRequest
	(*TourReviewResponse)(nil),            // 16: TourReviewResponse
	(*GetTourReviewsResponse)(nil),        // 17: GetTourReviewsResponse
	(*CreateTourReviewRequest)(nil),       // 18: CreateTourReviewRequest
	(*UpdateTourReviewRequest)(nil),       // 19: UpdateTourReviewRequest
	(*GetAverageGradeForTourRequest)(nil), // 20: GetAverageGradeForTourRequest
	(*TourProblemResponse)(nil),           // 21: TourProblemResponse
	(*GetTourProblemsResponse)(nil),       // 22: GetTourProblemsResponse
	(*CreateTourProblemRequest)(nil),      // 23: CreateTourProblemRequest
	(*UpdateTourProblemRequest)(nil),      // 24: UpdateTourProblemRequest
	(*Tour)(nil),                          // 25: Tour
	(*Checkpoint)(nil),                    // 26: Checkpoint
	(*Equipment)(nil),                     // 27: Equipment
	(*TourReview)(nil),                    // 28: TourReview
	(*TourProblem)(nil),                   // 29: TourProblem
	(*timestamppb.Timestamp)(nil),         // 30: google.protobuf.Timestamp
}
var file_tour_service_proto_depIdxs = []int32{
	25, // 0: GetToursResponse.tours:type_name -> Tour
	25, // 1: TourResponse.tour:type_name -> Tour
	25, // 2: CreateTourRequest.tour:type_name -> Tour
	25, // 3: UpdateTourRequest.tour:type_name -> Tour
	26, // 4: CheckpointResponse.checkpoint:type_name -> Checkpoint
	26, // 5: GetCheckpointsResponse.checkpoints:type_name -> Checkpoint
	26, // 6: CreateCheckpointRequest.checkpoint:type_name -> Checkpoint
	26, // 7: UpdateCheckpointRequest.checkpoint:type_name -> Checkpoint
	27, // 8: EquipmentResponse.equipment:type_name -> Equipment
	27, // 9: GetEquipmentsResponse.equipments:type_name -> Equipment
	27, // 10: CreateEquipmentRequest.equipment:type_name -> Equipment
	27, // 11: UpdateEquipmentRequest.equipment:type_name -> Equipment
	28, // 12: TourReviewResponse.tourReview:type_name -> TourReview
	28, // 13: GetTourReviewsResponse.tourReviews:type_name -> TourReview
	28, // 14: CreateTourReviewRequest.tourReview:type_name -> TourReview
	28, // 15: UpdateTourReviewRequest.tourReview:type_name -> TourReview
	29, // 16: TourProblemResponse.tourProblem:type_name -> TourProblem
	29, // 17: GetTourProblemsResponse.tourProblems:type_name -> TourProblem
	29, // 18: CreateTourProblemRequest.tourProblem:type_name -> TourProblem
	29, // 19: UpdateTourProblemRequest.tourProblem:type_name -> TourProblem
	0,  // 20: Tour.status:type_name -> Tour.Status
	30, // 21: TourReview.visitDate:type_name -> google.protobuf.Timestamp
	30, // 22: TourReview.reviewDate:type_name -> google.protobuf.Timestamp
	30, // 23: TourProblem.timeStamp:type_name -> google.protobuf.Timestamp
	30, // 24: TourProblem.deadlineTimeStamp:type_name -> google.protobuf.Timestamp
	3,  // 25: TourService.GetTour:input_type -> GetRequest
	1,  // 26: TourService.GetAllTours:input_type -> GetAllRequest
	6,  // 27: TourService.PostTour:input_type -> CreateTourRequest
	7,  // 28: TourService.UpdateTour:input_type -> UpdateTourRequest
	3,  // 29: TourService.DeleteTour:input_type -> GetRequest
	3,  // 30: TourService.GetToursByAuthor:input_type -> GetRequest
	3,  // 31: TourService.GetCheckpoint:input_type -> GetRequest
	10, // 32: TourService.PostCheckpoint:input_type -> CreateCheckpointRequest
	11, // 33: TourService.UpdateCheckpoint:input_type -> UpdateCheckpointRequest
	3,  // 34: TourService.DeleteCheckpoint:input_type -> GetRequest
	3,  // 35: TourService.GetCheckpointsByTourId:input_type -> GetRequest
	3,  // 36: TourService.GetEquipment:input_type -> GetRequest
	14, // 37: TourService.PostEquipment:input_type -> CreateEquipmentRequest
	15, // 38: TourService.UpdateEquipment:input_type -> UpdateEquipmentRequest
	3,  // 39: TourService.DeleteEquipment:input_type -> GetRequest
	18, // 40: TourService.PostTourReview:input_type -> CreateTourReviewRequest
	19, // 41: TourService.UpdateTourReview:input_type -> UpdateTourReviewRequest
	3,  // 42: TourService.DeleteTourReview:input_type -> GetRequest
	1,  // 43: TourService.GetAllTourReviews:input_type -> GetAllRequest
	3,  // 44: TourService.GetTourReviewsByTourID:input_type -> GetRequest
	3,  // 45: TourService.GetAverageGradeForTour:input_type -> GetRequest
	3,  // 46: TourService.GetTourProblem:input_type -> GetRequest
	23, // 47: TourService.PostTourProblem:input_type -> CreateTourProblemRequest
	24, // 48: TourService.UpdateTourProblem:input_type -> UpdateTourProblemRequest
	3,  // 49: TourService.DeleteTourProblem:input_type -> GetRequest
	3,  // 50: TourService.GetTourProblemsForTourist:input_type -> GetRequest
	4,  // 51: TourService.GetTour:output_type -> TourResponse
	2,  // 52: TourService.GetAllTours:output_type -> GetToursResponse
	4,  // 53: TourService.PostTour:output_type -> TourResponse
	4,  // 54: TourService.UpdateTour:output_type -> TourResponse
	4,  // 55: TourService.DeleteTour:output_type -> TourResponse
	2,  // 56: TourService.GetToursByAuthor:output_type -> GetToursResponse
	8,  // 57: TourService.GetCheckpoint:output_type -> CheckpointResponse
	8,  // 58: TourService.PostCheckpoint:output_type -> CheckpointResponse
	8,  // 59: TourService.UpdateCheckpoint:output_type -> CheckpointResponse
	8,  // 60: TourService.DeleteCheckpoint:output_type -> CheckpointResponse
	9,  // 61: TourService.GetCheckpointsByTourId:output_type -> GetCheckpointsResponse
	12, // 62: TourService.GetEquipment:output_type -> EquipmentResponse
	12, // 63: TourService.PostEquipment:output_type -> EquipmentResponse
	12, // 64: TourService.UpdateEquipment:output_type -> EquipmentResponse
	12, // 65: TourService.DeleteEquipment:output_type -> EquipmentResponse
	16, // 66: TourService.PostTourReview:output_type -> TourReviewResponse
	16, // 67: TourService.UpdateTourReview:output_type -> TourReviewResponse
	16, // 68: TourService.DeleteTourReview:output_type -> TourReviewResponse
	17, // 69: TourService.GetAllTourReviews:output_type -> GetTourReviewsResponse
	17, // 70: TourService.GetTourReviewsByTourID:output_type -> GetTourReviewsResponse
	20, // 71: TourService.GetAverageGradeForTour:output_type -> GetAverageGradeForTourRequest
	21, // 72: TourService.GetTourProblem:output_type -> TourProblemResponse
	21, // 73: TourService.PostTourProblem:output_type -> TourProblemResponse
	21, // 74: TourService.UpdateTourProblem:output_type -> TourProblemResponse
	21, // 75: TourService.DeleteTourProblem:output_type -> TourProblemResponse
	22, // 76: TourService.GetTourProblemsForTourist:output_type -> GetTourProblemsResponse
	51, // [51:77] is the sub-list for method output_type
	25, // [25:51] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_tour_service_proto_init() }
func file_tour_service_proto_init() {
	if File_tour_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tour_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToursResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourEmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTourRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTourRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckpointsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCheckpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCheckpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEquipmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEquipmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEquipmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourReviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTourReviewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTourReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTourReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAverageGradeForTourRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourProblemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTourProblemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTourProblemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTourProblemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Checkpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Equipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tour_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourProblem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tour_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tour_service_proto_goTypes,
		DependencyIndexes: file_tour_service_proto_depIdxs,
		EnumInfos:         file_tour_service_proto_enumTypes,
		MessageInfos:      file_tour_service_proto_msgTypes,
	}.Build()
	File_tour_service_proto = out.File
	file_tour_service_proto_rawDesc = nil
	file_tour_service_proto_goTypes = nil
	file_tour_service_proto_depIdxs = nil
}
